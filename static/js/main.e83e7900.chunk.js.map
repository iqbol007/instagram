{"version":3,"sources":["components/Comment/Comment.js","actions/actionTypes.js","components/Comments/Comments.js","components/CommentAddForm/CommentAddForm.js","components/VievAllComments/VievAllComments.js","components/Post/Post.js","components/PostAddForm/PostAddForm.js","components/Footer/Footer.js","components/Wall/Wall.js","App.js","serviceWorker.js","index.js"],"names":["Comment","comment","dispatch","className","onClick","type","commentId","id","author","content","comLikedByme","likes","Comments","comments","map","o","key","reverse","CommentAddForm","postId","useState","setComment","handleSubmit","evt","preventDefault","onSubmit","onChange","value","target","placeholder","autocomplete","VievAllComments","onClose","isOpen","dialog","Post","post","avaImg","imgUrl","conImg","imgContentUrl","avaStyle","width","height","backgroundImage","backgroundSize","borderRadius","contentImgStyle","paddingTop","setisOpen","style","geo","isLikedByme","textContent","PostAddForm","authorImageUrl","setauthorImageUrl","postContent","setpostContent","postDescription","setpostDescription","htmlFor","Footer","onAddButtonClick","nextPostId","nextCommentId","initialPosts","comLikedByMe","isLikedByMe","addComment","Wall","useReducer","posts","action","p","postLike","commentAdd","c","filter","addPost","removePost","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e83e7900.chunk.js","sourcesContent":["import React from \"react\";\nimport { COMMENT_LIKE, COMMENT_REMOVE } from \"../../actions/actionTypes\";\n\nexport default function Comment({ comment, dispatch }) {\n  const handleLike = () => {\n    dispatch({ type: COMMENT_LIKE, commentId: comment.id });\n  };\n  const handleRemove = () => {\n    dispatch({ type: COMMENT_REMOVE, commentId: comment.id });\n  };\n\n  return (\n    <article className=\"comment\">\n      <div>\n        <i className=\"fa fa-trash com-rem\" onClick={handleRemove}></i>\n      </div>\n      <div className=\"comment-author\">\n        {comment.author}\n        <span className=\"comment-text col\">{comment.content}</span>\n\n        <i\n          className={\n            comment.comLikedByme\n              ? \"fa fa-heart fa-sm col likedClass\"\n              : \"fa fa-heart fa-sm col\"\n          }\n          onClick={handleLike}\n        ></i>\n      </div>\n      <div className=\"comment-info\">\n        <span className=\"comment-aded-time\">13мин.</span>\n        <span className=\"comment-likes\">Нравится: {comment.likes}</span>\n        <span className=\"comment-reply\">\n          Ответить <i className=\"fa fa-reply\"></i>\n        </span>\n      </div>\n      <footer></footer>\n    </article>\n  );\n}\n","export const POST_REMOVE = 'POST_REMOVE';\nexport const POST_ADD = 'POST_ADD';\nexport const POST_LIKE = 'POST_LIKE';\n\nexport const COMMENT_ADD = 'COMMENT_ADD';\nexport const COMMENT_REMOVE = 'COMMENT_REMOVE';\nexport const COMMENT_LIKE = 'COMMENT_LIKE';\n","import React from \"react\";\nimport Comment from \"../Comment/Comment\";\n\nexport default function Comments({ comments, dispatch }) {\n  return (\n    <div>\n      {comments\n        .map(o => <Comment key={o.id} comment={o} dispatch={dispatch} />)\n        .reverse()}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { COMMENT_ADD } from \"../../actions/actionTypes\";\n\nexport default function CommentAddForm({ postId, dispatch }) {\n  const [comment, setComment] = useState(\"\");\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch({ type: COMMENT_ADD, comment, postId });\n    setComment(\"\");\n  };\n\n  const handleChange = evt => {\n    const value = evt.target.value;\n    setComment(value);\n  };\n\n  return (\n    <form className=\"comment-add-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"input-comment\"\n        onChange={handleChange}\n        value={comment}\n        placeholder=\"To comment...\"\n        autocomplete=\"off\"\n      ></input>\n      <i className=\"fa fa-plus-circle gray\" onClick={handleSubmit}></i>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Comment from \"../Comment/Comment\";\nexport default function VievAllComments({\n  comments,\n  onClose,\n  isOpen,\n  dispatch\n}) {\n  let dialog = (\n    <div className=\"dialogStyles\">\n      <button className=\"dialogButtonsStyles\" onClick={onClose}>\n        x\n      </button>\n      <div className=\"viev-all-comments\">\n        {comments.map(o => (\n          <Comment key={o.id} comment={o} dispatch={dispatch} />\n        ))}\n      </div>\n    </div>\n  );\n  if (!isOpen) {\n    dialog = null;\n  }\n  return <>{dialog}</>;\n}\n","import React, { useState } from \"react\";\nimport Comments from \"../Comments/Comments\";\nimport CommentAddForm from \"../CommentAddForm/CommentAddForm\";\nimport { POST_LIKE, POST_REMOVE } from \"../../actions/actionTypes\";\nimport VievAllComments from \"../VievAllComments/VievAllComments\";\n\nexport default function Post({ post, dispatch }) {\n  const handleLike = () => {\n    dispatch({ type: POST_LIKE, postId: post.id });\n  };\n  const avaImg = post.imgUrl;\n  const conImg = post.imgContentUrl;\n  var avaStyle = {\n    width: \"40px\",\n    height: \"40px\",\n    backgroundImage: `url(${avaImg})`,\n    backgroundSize: \"cover\",\n    borderRadius: \"50%\"\n  };\n  var contentImgStyle = {\n    width: \"400px\",\n    height: \"400px\",\n    paddingTop: \"5px\",\n    backgroundImage: `url(${conImg})`,\n    backgroundSize: \"cover\"\n  };\n\n  const [isOpen, setisOpen] = useState(false);\n\n  const handleRemowePost = () => {\n    dispatch({ type: POST_REMOVE, postId: post.id });\n  };\n  return (\n    <article className=\"post\">\n      <div className=\"author\">\n        <div style={avaStyle}></div>\n        <span className=\"author-name\">{post.author}</span>\n        <i className=\"fa fa-trash remover\" onClick={handleRemowePost}></i>\n        <div></div>\n      </div>\n      <div className=\"text-content\">{post.geo}</div>\n      <div className=\"content\">\n        <div className=\"img-content\">\n          <div style={contentImgStyle}></div>\n        </div>\n        <div className=\"social-buttons\">\n          <i\n            className={\n              post.isLikedByme\n                ? \"fa fa-heart fr fa-lg likedClass\"\n                : \"fa fa-heart fr fa-lg\"\n            }\n            onClick={handleLike}\n          ></i>\n\n          <i\n            className=\"fa fa-comment fr fa-lg\"\n            onClick={() => setisOpen(true)}\n          ></i>\n          <i className=\"fa fa-paper-plane fr fa-lg\"></i>\n          <i className=\"fa fa-bookmark fl fa-lg\"></i>\n        </div>\n      </div>\n      <footer className=\"footer\">\n        <div className=\"likes\">Нравится: {post.likes}</div>\n        <div className=\"text-content\">\n          <span className=\"description\">{post.author}</span> {post.textContent}\n        </div>\n      </footer>\n      <CommentAddForm postId={post.id} dispatch={dispatch} />\n      <Comments comments={post.comments} dispatch={dispatch} />\n      <VievAllComments\n        comments={post.comments}\n        isOpen={isOpen}\n        onClose={() => setisOpen(false)}\n        dispatch={dispatch}\n      />\n    </article>\n  );\n}\n","import React, { useState } from \"react\";\nimport { POST_ADD } from \"../../actions/actionTypes\";\nexport default function PostAddForm({ onClose, isOpen, dispatch }) {\n  const [authorImageUrl, setauthorImageUrl] = useState(\"\");\n  const [postContent, setpostContent] = useState(\"\");\n  const [postDescription, setpostDescription] = useState(\"\");\n  const handleSubmit = () => {\n    if (authorImageUrl === \"\" && postContent === \"\") {\n      return;\n    }\n    dispatch({ type: POST_ADD, authorImageUrl, postContent, postDescription });\n    onClose();\n    setauthorImageUrl(\"\");\n    setpostContent(\"\");\n    setpostDescription(\"\");\n  };\n  const handleChangeAvatar = evt => {\n    const value = evt.target.value;\n    setauthorImageUrl(value);\n  };\n  const handleChangeContent = evt => {\n    const value = evt.target.value;\n    setpostContent(value);\n  };\n  const handleChangeDescription = evt => {\n    const value = evt.target.value;\n    setpostDescription(value);\n  };\n  let dialog = (\n    <div className=\"dialogStyles\">\n      <button onClick={onClose} className=\"dialogButtonsStyles\">\n        x\n      </button>\n      <h1>Add post form</h1>\n      <div>\n        <label className=\"lab\" htmlFor=\"input-ava\">\n          Input post author image url:{\" \"}\n        </label>\n        <input\n          onChange={handleChangeAvatar}\n          id=\"input-ava\"\n          className=\"input-avaurl\"\n          placeholder=\"URL...\"\n          autocomplete=\"off\"\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"input-cont\">Input post content url: </label>\n        <input\n          onChange={handleChangeContent}\n          id=\"input-cont\"\n          className=\"input-conturl\"\n          placeholder=\"URL...\"\n          autocomplete=\"off\"\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"input-desc\">Input post description: </label>\n        <input\n          onChange={handleChangeDescription}\n          id=\"input-desc\"\n          className=\"input-description\"\n          placeholder=\"description...\"\n          autocomplete=\"off\"\n        ></input>\n      </div>\n\n      <button onClick={handleSubmit}>ok</button>\n    </div>\n  );\n  if (!isOpen) {\n    dialog = null;\n  }\n  return <>{dialog}</>;\n}\n","import React from \"react\";\n\nexport default function Footer({ onAddButtonClick }) {\n  return (\n    <div className=\"footer-buttons fa-xl size-xl\">\n      <i className=\"fa fa-home fa-xl size-xl\" />\n      <i className=\"fa fa-search fa-xl size-xl\" />\n      <i\n        onClick={onAddButtonClick}\n        className=\"fa fa-plus-square fa-xl size-xl\"\n      ></i>\n      <i className=\"fa fa-heart fa-xl size-xl\" />\n      <i className=\"fa fa-user fa-xl size-xl\"></i>\n    </div>\n  );\n}\n","import React, { useState, useReducer } from \"react\";\nimport Post from \"../Post/Post\";\nimport PostAddForm from \"../PostAddForm/PostAddForm\";\nimport {\n  COMMENT_ADD,\n  COMMENT_LIKE,\n  COMMENT_REMOVE,\n  POST_LIKE,\n  POST_ADD,\n  POST_REMOVE\n} from \"../../actions/actionTypes\";\nimport Footer from \"../Footer/Footer\";\nlet nextPostId = 1;\nlet nextCommentId = 1;\n\nconst initialPosts = [\n  {\n    id: nextPostId++,\n    author: \"instagram\",\n    imgUrl: \"https://i.pravatar.cc/200\",\n    likes: 3,\n    textContent: \"Second Post\",\n    imgContentUrl: \"https://i.pravatar.cc/510\",\n    comments: [\n      {\n        id: nextCommentId++,\n        author: \"fcbarcelona\",\n        content: \"good bay\",\n        likes: 14,\n        comLikedByMe: false\n      }\n    ],\n    isLikedByme: false\n  },\n  {\n    id: nextPostId++,\n    author: \"leomessi\",\n    imgUrl: \"https://i.pravatar.cc/200\",\n    likes: 4,\n    isLikedByMe: false,\n    textContent: \"good morning\",\n    imgContentUrl: \"https://i.pravatar.cc/530\",\n    isLikedByme: false,\n    comments: [\n      {\n        id: nextCommentId++,\n        author: \"danny\",\n        content: \"Nice Post\",\n        likes: 0,\n        comLikedByme: false\n      }\n    ]\n  },\n  {\n    id: nextPostId++,\n    author: \"cristiano\",\n    imgUrl: \"https://i.pravatar.cc/200\",\n    likes: 215,\n    textContent: \"third Post\",\n    isLikedByMe: false,\n    imgContentUrl: \"https://i.pravatar.cc/590\",\n    isLikedByme: false,\n    comments: [\n      {\n        id: nextCommentId++,\n        author: \"john\",\n        content: \"Cool man!!!\",\n        likes: 55,\n        comLikedByme: false\n      }\n    ]\n  }\n];\nfunction likeComment(comments, id) {\n  return comments.map(c => {\n    if (c.id !== id) {\n      return c;\n    } else {\n      if (c.comLikedByme) {\n        c.comLikedByme = !c.comLikedByme;\n        return { ...c, likes: c.likes - 1 };\n      }\n      c.comLikedByme = !c.comLikedByme;\n      return { ...c, likes: c.likes + 1 };\n    }\n  });\n}\nfunction removeComment(comments, id) {\n  return comments.filter(c => c.id !== id);\n}\n\nfunction addComment(comments, comment) {\n  return [\n    ...comments,\n    { id: nextCommentId++, author: \"user_01\", content: comment, likes: 0 }\n  ];\n}\nfunction addPost(posts, authorImageUrl, postContent, postDescription) {\n  return [\n    ...posts,\n    {\n      id: nextPostId++,\n      author: \"user_01\",\n      imgUrl: authorImageUrl,\n      likes: 0,\n      textContent: postDescription,\n      imgContentUrl: postContent,\n      comments: [],\n      isLikedByme: false\n    }\n  ];\n}\nfunction removePost(posts, postId) {\n  return posts.filter(o => o.id !== postId);\n}\nfunction postLike(posts, postId) {\n  return posts.map(p => {\n    if (p.id !== postId) {\n      return p;\n    } else {\n      if (p.isLikedByme) {\n        p.isLikedByme = !p.isLikedByme;\n        return { ...p, likes: p.likes - 1 };\n      } else {\n        p.isLikedByme = !p.isLikedByme;\n        return { ...p, likes: p.likes + 1 };\n      }\n    }\n  });\n}\nfunction commentAdd(posts, postId, comment) {\n  return posts.map(p => ({\n    ...p,\n    comments: p.id !== postId ? p.comments : addComment(p.comments, comment)\n  }));\n}\nexport default function Wall() {\n  const [posts, dispatch] = useReducer(reducer, initialPosts);\n  const [isOpen, setisOpen] = useState(false);\n\n  function reducer(posts, action) {\n    switch (action.type) {\n      case POST_LIKE: {\n        const { postId } = action;\n        return postLike(posts, postId);\n      }\n      case COMMENT_ADD: {\n        const { postId, comment } = action;\n        return commentAdd(posts, postId, comment);\n      }\n      case COMMENT_LIKE: {\n        const { commentId } = action;\n        return posts.map(p => ({\n          ...p,\n          comments: likeComment(p.comments, commentId)\n        }));\n      }\n      case COMMENT_REMOVE: {\n        const { commentId } = action;\n        return posts.map(p => ({\n          ...p,\n          comments: removeComment(p.comments, commentId)\n        }));\n      }\n      case POST_ADD: {\n        const { authorImageUrl, postContent, postDescription } = action;\n        return addPost(posts, authorImageUrl, postContent, postDescription);\n      }\n      case POST_REMOVE: {\n        const { postId } = action;\n        return removePost(posts, postId);\n      }\n      default:\n        return posts;\n    }\n  }\n  return (\n    <>\n      <div className=\"main\">\n        <div className=\"header\">\n          <i className=\"fa fa-camera fr head-icons pl size-xl\"></i>\n          <span className=\"instagramm-logo\">Instagramm</span>\n          <i className=\"fa fa-paper-plane fl head-icons pr size-xl\"></i>\n        </div>\n        {posts\n          .map(o => <Post key={o.id} post={o} dispatch={dispatch} />)\n          .reverse()}\n        <PostAddForm\n          isOpen={isOpen}\n          onClose={()=>setisOpen(false)}\n          dispatch={dispatch}\n        />\n      </div>\n      <div className=\"space\"></div>\n      <Footer onAddButtonClick={()=>setisOpen(true)} />\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Wall from \"./components/Wall/Wall\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wall />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}